// Loads Fiji dependencies
import ij.IJ;
import ij.Prefs; 	// calls imagej settings
import ij.ImagePlus;
import java.lang.Runtime;
import java.io.File;
import java.io.FilenameFilter;

runtime = Runtime.getRuntime();
System.out.println(runtime.availableProcessors() + " cores available for multi-threading");

Prefs.setThreads(2); 	// defines the number of threads allowed
print("Threads: "+ Prefs.getThreads()); // prints thread setting in output

// Loads parameters form job file
System.out.println( "=======================================================" );
System.out.println( "Load Parameters" ) ;

dir = System.getProperty( "dir" );
first_czi_name = System.getProperty( "first_czi_name" );
	
int timepoint = Integer.parseInt( System.getProperty( "timepoint" ) );
angle = System.getProperty( "angle" );
stack_size = System.getProperty( "stack_size" );
int pad = Integer.parseInt( System.getProperty( "pad" ) );
int tif_timepoint = Integer.parseInt( System.getProperty( "tif_timepoint" ) );

// Prints Parameters into output file
System.out.println( "directory = " + dir );
System.out.println( "first_czi_name = " + first_czi_name );
System.out.println( "timepoint = " + timepoint );
System.out.println( "angle = " + angle );
System.out.println( "stack_size = " + stack_size );
System.out.println( "pad = " + pad );
System.out.println( "timepoint = " + tif_timepoint );

// Executes Fiji Plugin "Bioformats Importer" to open .czi file
System.out.println( "=======================================================" );
System.out.println( "Opening Image" ) ;
IJ.run("Bio-Formats Importer", 
	"open=" + dir + first_czi_name + " " + 
	"color_mode=Default " +
	"specify_range " +
	"view=[Standard ImageJ] " +
	"stack_order=XYCZT " +
	"series_" + angle + " " +
	"t_begin_" + angle + "=" + timepoint + " " +
	"t_end_" + angle + "=" + timepoint + " " +
	"t_step_" + angle + "=1");

// Resaves .czi files as .tif file
System.out.println( "Save as  .tif" ) ;
IJ.saveAs("Tiff ", dir + "img_TL" + IJ.pad( tif_timepoint, pad ) + "_Angle" + angle + ".tif");

/* shutdown */
runtime.exit(0);

