common: {
  # directory that contains the bean shell scripts
  bsh_directory: "/projects/pilot_spim/Christopher/snakemake-workflows/spim_registration/timelapse/",
  directory_cuda: "/sw/users/schmied/packages/cuda/lib/",
  fiji-app: "/sw/users/schmied/packages/2015-06-08_Fiji.app.cuda/ImageJ-linux64",
  fiji-prefix: "/sw/bin/xvfb-run -a",
  first_xml_filename: "Dual_Channel",
  hdf5_xml_filename: '"hdf5_Dual_Channel"',
  merged_xml: "hdf5_Dual_Channel_merge",
  ntimepoints: 2,
  angles: "0,72,144,216,288",
  channels: "green,red",
  illumination: "0",
  pixel_distance_x: '0.28590',
  pixel_distance_y: '0.28590',
  pixel_distance_z: '1.50000',
  pixel_unit: "um",
  transformation_switch: "timelapse_dublicate",
  # transformation_switch: "timelapse",
  # fusion_switch: "deconvolution"
  fusion_switch: "fusion"
  }
              
define_xml_czi: {
  first_czi: "2015-02-20_LZ2_Stock48_Stock58.czi", # essential
  rotation_around: "X-Axis",
  bsh_file: "define_czi.bsh"
  }
          
define_xml_tif: {
  image_file_pattern: 'img_TL{{t}}_Angle{{a}}.tif', # essential
  imglib_container: '"ArrayImg (faster)"',
  multiple_angles: '"YES (one file per angle)"',
  multiple_channels: '"NO (one channel)"',
  multiple_illumination_directions: '"NO (one illumination direction)"',
  multiple_timepoints: '"YES (one file per time-point)"',
  type_of_dataset: '"Image Stacks (ImageJ Opener)"',
  bsh_file: "define_tif_zip.bsh"
  }
  
resave_hdf5: {
  hdf5_chunk_sizes: '"{{ {{32,32,4}}, {{32,32,4}}, {{16,16,16}}, {{16,16,16}} }}"', # data dependent
  subsampling_factors: '"{{ {{1,1,1}}, {{2,2,1}}, {{4,4,1}}, {{8,8,1}} }}"',  # data dependent
  resave_angle: '"All angles"',
  resave_channel: '"All channels"',
  resave_illumination: '"All illuminations"',
  resave_timepoint: '"All Timepoints"',
  setups_per_partition: '0',
  timepoints_per_partition: '1',
  bsh_file: "export.bsh"
  }

registration: {
  reg_process_channel: '"Single channel (Select from List)"', # essential '"All channels"'; '"Single channel (Select from List)"'
  reg_processing_channel: '"red"',      # essential
  reg_interest_points_channel: '"beads"', # essential
  reg_radius_1: '2',           # essential
  reg_radius_2: '3',            # essential
  reg_threshold: '0.005',       # essential
  initial_sigma: '1.8',         # essetial
  threshold_gaussian: '0.0080',   # essential
  type_of_detection: '"Difference-of-Mean (Integral image based)"', # switch
  label_interest_points: '"beads"',               
  reg_process_timepoint: '"Single Timepoint (Select from List)"',
  reg_process_angle: '"All angles"',
  reg_process_illumination: '"All illuminations"',
  subpixel_localization: '"3-dimensional quadratic fit"',
  detection_min_max: "find_maxima",
  type_of_registration: '"Register timepoints individually"',
  algorithm: '"Fast 3d geometric hashing (rotation invariant)"',
  transformation_model: "Affine",
  allowed_error_for_ransac: '5',
  significance: '10',
  fix_tiles: '"Fix first tile"',
  map_back_tiles: '"Map back to first tile using rigid model"',
  model_to_regularize_with: "Rigid",
  lambda: '0.10',
  imglib_container: '"ArrayImg (faster)"',
  bsh_file: "registration.bsh"
  }

xml_merge: {
  bsh_file: "xml_merge.bsh"
  }
  
timelapse: {
  reference_timepoint: '0',   # essential
  type_of_registration_timelapse: '"Match against one reference timepoint (no global optimization)"',
  timelapse_process_timepoints: '"All Timepoints"',
  bsh_file: "timelapse_registration.bsh"
  }
  
dublicate_transformations: {
  source_dublication: "red",  # essential for 1 usecase
  target_dublication: "green", # essential for 1 usecase
  duplicate_which_transformations: '"Replace all transformations"',
  bsh_file: "dublicate_transformations.bsh"
  }
  
fusion: {
  downsample: '1',  # essential
  minimal_x: '220', # essential maybe automate
  minimal_y: '40',  # essential maybe automate
  minimal_z: '-290',  # essential maybe automate
  maximal_x: '976',   # essential maybe automate
  maximal_y: '1892',  # essential maybe automate  
  maximal_z: '472',   # essential maybe automate
  fused_image: '"Append to current XML Project"',
  imglib2_container_fusion: '"ArrayImg"',
  imglib2_data_container: '"ArrayImg (faster)"',
  interpolation: '"Linear Interpolation"',
  pixel_type: '"16-bit unsigned integer"',
  process_angle: '"All angles"',
  process_channel: '"All channels"',
  process_illumination: '"All illuminations"',
  process_timepoint: '"Single Timepoint (Select from List)"',
  process_views_in_paralell: '"All"',
  xml_output: '"Save every XML with user-provided unique id"',
  bsh_file: "fusion.bsh"
  }

external_transform: {
  # BUG
  # channel setting: '"all_channels"'
  channel_setting: '"green,red"',
  transform_timepoint: '"All Timepoints"',
  transform_angle: '"All angles"',
  transform_channel: '"All channels"',
  # illumination setting only one illumination side
  transform_illumination: '"All illuminations"',
  apply_transformation: '"Current view transformations (appends to current transforms)"',
  define_mode_transform: '"Matrix"',
  matrix_transform: '"0.5, 0.0, 0.0, 0.0, 0.0, 0.5, 0.0, 0.0, 0.0, 0.0, 0.5, 0.0"',  # essential
  transformation: '"Rigid"',
  bsh_file: "transform.bsh"
  }

deconvolution: {
  iterations: '1', # essential
  minimal_x_deco: '190', # essential maybe automate
  minimal_y_deco: '-16', # essential maybe automate
  minimal_z_deco: '-348', # essential maybe automate
  maximal_x_deco: '1019', # essential maybe automate
  maximal_y_deco: '1941', # essential maybe automate
  maximal_z_deco: '486', # essential maybe automate
  detections_to_extract_psf_for_channel: '"beads"',
  process_timepoint: '"Single Timepoint (Select from List)"',
  process_angle: '"All angles"',
  process_channel: '"All channels"',
  process_illumination: '"All illuminations"',
  Tikhonov_parameter: '0.0006',
  compute: '"in 512x512x512 blocks"',
  compute_on: '"GPU (Nvidia CUDA via JNA)"',
  imglib2_container: '"ArrayImg"',
  osem_acceleration: '"1 (balanced)"',
  psf_estimation: '"Extract from beads"',
  psf_size_x: '19',
  psf_size_y: '19',
  psf_size_z: '25',
  type_of_iteration: '"Efficient Bayesian - Optimization I (fast, precise)"',
  bsh_file: "deconvolution_GPU.bsh"
  }
  
hdf5_output: {
  # Will be obsolete
  output_image_file_pattern: 'TP{{t}}_Ch{{c}}_Ill0_Ang0,72,144,216,288.tif',
  output_xml: '"fused_Dual_Channel"',
  output_hdf5_xml: '"hdf5_fused_Dual_Channel"',
  output_multiple_channels: '"YES (one file per channel)"', # "\"YES (one file per channel)\"" or  "\"NO (one channel)\""
  output_timepoints: '0-1',
  output_pixel_distance_x: 0.28590,
  output_pixel_distance_y: 0.28590,
  output_pixel_distance_z: 0.28590,
  output_pixel_unit: 'um',
  output_channels: "green,red",
  output_data_type: "16Bit",
  convert_32bit: '"[Use min/max of first image (might saturate intenities over time)]"',
  output_type_of_dataset: '"Image Stacks (ImageJ Opener)"',
  output_multiple_timepoints: '"YES (one file per time-point)"',
  output_multiple_angles: '"NO (one angle)"',
  output_illumination_directions: '"NO (one illumination direction)"',
  output_imglib_container: '"ArrayImg (faster)"',
  subsampling_output: '"{{ {{1,1,1}}, {{2,2,2}}, {{4,4,4}}, {{8,8,8}} }}"', # data dependent
  chunk_sizes_output: '"{{ {{16,16,16}}, {{16,16,16}}, {{16,16,16}}, {{16,16,16}} }}"', # data dependent
  # subsampling_output: '"{{ {{1,1,1}}, {{2,2,2}} }}"',
  # chunk_sizes_output: '"{{ {{16,16,16}}, {{16,16,16}} }}"',
  bsh_file_define: "define_output.bsh",
  bsh_file_hdf5: "export_output.bsh"
  }

